{"ast":null,"code":"var _jsxFileName = \"D:\\\\React\\\\todo\\\\src\\\\components\\\\TextForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction TextForm(props) {\n  _s();\n  const [text, setText] = useState('');\n  const [isUpperCase, setIsUpperCase] = useState(false);\n  const handleConvert = () => {\n    setIsUpperCase(prev => !prev);\n    setText(text => isUpperCase ? text.toLowerCase() : text.toUpperCase());\n  };\n  const handleOnChange = event => {\n    setText(event.target.value);\n  };\n  const handleSpeak = () => {\n    let msg = new SpeechSynthesisUtterance();\n    msg.text = text;\n    window.speechSynthesis.speak(msg);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      style: {\n        color: props.mode === 'dark' ? 'white' : 'black'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: props.heading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3 \",\n        children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n          className: \"form-control\",\n          value: text,\n          onChange: handleOnChange,\n          style: {\n            backgroundColor: props.mode === 'dark' ? 'grey' : 'white',\n            color: props.mode === 'dark' ? 'white' : 'black'\n          },\n          id: \"myBox\",\n          rows: \"8\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary\",\n        onClick: handleConvert,\n        children: [\" \", isUpperCase ? 'Convert to Lowercase' : 'Convert to Uppercase', \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-warning ms-2\",\n        onClick: handleSpeak,\n        children: \"Read Text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"my-3\",\n        style: {\n          color: props.mode === 'dark' ? 'white' : 'black'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Your text summary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [text.split(\" \").filter(element => {\n            return element.length !== 0;\n          }).length, \" words and \", text.length, \" characters\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [0.008 * text.split(\" \").length, \" Minutes read\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Preview\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: text.length > 0 ? text : 'Enter text to preview it here..'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n}\n_s(TextForm, \"ux072vKPDdqDbKZmccArvCjWAtg=\");\n_c = TextForm;\nexport default TextForm;\nTextForm.propTypes = {\n  heading: PropTypes.string.isRequired\n};\nvar _c;\n$RefreshReg$(_c, \"TextForm\");","map":{"version":3,"names":["React","useState","PropTypes","jsxDEV","_jsxDEV","Fragment","_Fragment","TextForm","props","_s","text","setText","isUpperCase","setIsUpperCase","handleConvert","prev","toLowerCase","toUpperCase","handleOnChange","event","target","value","handleSpeak","msg","SpeechSynthesisUtterance","window","speechSynthesis","speak","children","className","style","color","mode","heading","fileName","_jsxFileName","lineNumber","columnNumber","onChange","backgroundColor","id","rows","onClick","split","filter","element","length","_c","propTypes","string","isRequired","$RefreshReg$"],"sources":["D:/React/todo/src/components/TextForm.js"],"sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nfunction TextForm(props) {\r\n\r\n    const [text, setText] = useState('')\r\n\r\n    const [isUpperCase, setIsUpperCase] = useState(false)\r\n\r\n    const handleConvert = () => {\r\n        setIsUpperCase((prev) => !prev)\r\n        setText((text) => (isUpperCase ? text.toLowerCase() : text.toUpperCase()))\r\n    }\r\n\r\n    const handleOnChange = (event) => {\r\n        setText(event.target.value)\r\n    }\r\n\r\n    const handleSpeak = () => {\r\n        let msg = new SpeechSynthesisUtterance();\r\n        msg.text = text\r\n        window.speechSynthesis.speak(msg)\r\n    }\r\n\r\n  return (\r\n    <>\r\n    <div className=\"container\" style={{color: props.mode === 'dark' ? 'white': 'black'}}>\r\n        <h4>{props.heading}</h4>\r\n    <div className=\"mb-3 \">\r\n    <textarea className=\"form-control\" value={text} onChange={handleOnChange} style={{backgroundColor: props.mode === 'dark' ? 'grey': 'white', color: props.mode === 'dark' ? 'white': 'black'}} id=\"myBox\" rows=\"8\"></textarea>\r\n    </div>\r\n    <button className='btn btn-primary' onClick={handleConvert}> {isUpperCase ? 'Convert to Lowercase' : 'Convert to Uppercase'} </button>\r\n    <button className='btn btn-warning ms-2' onClick={handleSpeak}>Read Text</button>\r\n\r\n    <div className=\"my-3\" style={{color: props.mode === 'dark' ? 'white': 'black'}}>\r\n        <h1>Your text summary</h1>\r\n        {/* <p>{text.split(\" \").length-1} words and {text.length} characters</p> */}\r\n        <p>{text.split(\" \").filter((element)=>{return element.length!==0}).length} words and {text.length} characters</p>\r\n        <p>{0.008 * text.split(\" \").length} Minutes read</p>\r\n        <h2>Preview</h2>\r\n        <p>{text.length>0 ? text : 'Enter text to preview it here..' }</p>\r\n    </div>\r\n\r\n    </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default TextForm\r\n\r\nTextForm.propTypes = {\r\n    heading: PropTypes.string.isRequired\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}