{"ast":null,"code":"var _jsxFileName = \"D:\\\\React\\\\todo\\\\src\\\\components\\\\TextForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction TextForm(props) {\n  _s();\n  const [text, setText] = useState('Enter Text Here...');\n  const [isUpperCase, setIsUpperCase] = useState(false);\n  const handleConvert = () => {\n    setIsUpperCase(prev => !prev);\n    setText(text => isUpperCase ? text.toLowerCase() : text.toUpperCase());\n  };\n  const handleOnChange = event => {\n    setText(event.target.value);\n  };\n  const handleSpeak = () => {\n    let msg = new SpeechSynthesisUtterance();\n    msg.text = text;\n    window.speechSynthesis.speak(msg);\n  };\n  const [bodyStyle, setBodyStyle] = useState({\n    color: '#242424',\n    backgroundColor: '#f1f1f1'\n  });\n  const [btnText, setBtnText] = useState(\"Enable Dark Mode\");\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      style: bodyStyle,\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: props.heading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3 \",\n        children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n          className: \"form-control\",\n          value: text,\n          onChange: handleOnChange,\n          id: \"myBox\",\n          rows: \"8\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary\",\n        onClick: handleConvert,\n        children: [\" \", isUpperCase ? 'Convert to Lowercase' : 'Convert to Uppercase', \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-warning ms-2\",\n        onClick: handleSpeak,\n        children: \"Read Text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-outline-warning ms-2\",\n        onClick: toogleStyle,\n        children: btnText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"my-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Your text summary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [text.split(\" \").length, \" words and \", text.length, \" characters\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [0.008 * text.split(\" \").length, \" Minutes read\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"PReview\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n}\n_s(TextForm, \"IFmQb5i+HoWzfKpjKGIYlc1k1WE=\");\n_c = TextForm;\nexport default TextForm;\nTextForm.propTypes = {\n  heading: PropTypes.string.isRequired\n};\nvar _c;\n$RefreshReg$(_c, \"TextForm\");","map":{"version":3,"names":["React","useState","PropTypes","jsxDEV","_jsxDEV","Fragment","_Fragment","TextForm","props","_s","text","setText","isUpperCase","setIsUpperCase","handleConvert","prev","toLowerCase","toUpperCase","handleOnChange","event","target","value","handleSpeak","msg","SpeechSynthesisUtterance","window","speechSynthesis","speak","bodyStyle","setBodyStyle","color","backgroundColor","btnText","setBtnText","children","className","style","heading","fileName","_jsxFileName","lineNumber","columnNumber","onChange","id","rows","onClick","toogleStyle","split","length","_c","propTypes","string","isRequired","$RefreshReg$"],"sources":["D:/React/todo/src/components/TextForm.js"],"sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nfunction TextForm(props) {\r\n\r\n    const [text, setText] = useState('Enter Text Here...')\r\n\r\n    const [isUpperCase, setIsUpperCase] = useState(false)\r\n\r\n    const handleConvert = () => {\r\n        setIsUpperCase((prev) => !prev)\r\n        setText((text) => (isUpperCase ? text.toLowerCase() : text.toUpperCase()))\r\n    }\r\n\r\n    const handleOnChange = (event) => {\r\n        setText(event.target.value)\r\n    }\r\n\r\n    const handleSpeak = () => {\r\n        let msg = new SpeechSynthesisUtterance();\r\n        msg.text = text\r\n        window.speechSynthesis.speak(msg)\r\n    }\r\n\r\n    const [bodyStyle, setBodyStyle] = useState ({\r\n        color: '#242424',\r\n        backgroundColor: '#f1f1f1'\r\n    })\r\n    const [btnText, setBtnText] = useState (\"Enable Dark Mode\")\r\n\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n    <div className=\"container\" style={bodyStyle}>\r\n        <h4>{props.heading}</h4>\r\n    <div className=\"mb-3 \">\r\n    <textarea className=\"form-control\" value={text} onChange={handleOnChange}  id=\"myBox\" rows=\"8\"></textarea>\r\n    </div>\r\n    <button className='btn btn-primary' onClick={handleConvert}> {isUpperCase ? 'Convert to Lowercase' : 'Convert to Uppercase'} </button>\r\n    <button className='btn btn-warning ms-2' onClick={handleSpeak}>Read Text</button>\r\n    <button className='btn btn-outline-warning ms-2' onClick={toogleStyle}>{btnText}</button>\r\n\r\n    <div className=\"my-3\">\r\n        <h1>Your text summary</h1>\r\n        <p>{text.split(\" \").length} words and {text.length} characters</p>\r\n        <p>{0.008 * text.split(\" \").length} Minutes read</p>\r\n        <h2>PReview</h2>\r\n        <p>{text}</p>\r\n    </div>\r\n\r\n    </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default TextForm\r\n\r\nTextForm.propTypes = {\r\n    heading: PropTypes.string.isRequired\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}