{"ast":null,"code":"var _jsxFileName = \"D:\\\\React\\\\todo\\\\src\\\\components\\\\TextForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction TextForm(props) {\n  _s();\n  const handleUpClick = () => {\n    console.log(\"button is clicked\" + text);\n    let newText = text.toUpperCase();\n    setText(newText);\n    setButtonName('LowerCase');\n  };\n  const handleOnChange = event => {\n    setText(event.target.value);\n  };\n  const [text, setText] = useState('Enter Text Here...');\n  const [buttonName, setButtonName] = useState('Upper');\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: props.heading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3 \",\n        children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n          className: \"form-control\",\n          value: text,\n          onChange: handleOnChange,\n          id: \"myBox\",\n          rows: \"8\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary\",\n        onClick: handleUpClick,\n        children: [\"Convert to \", buttonName]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n}\n_s(TextForm, \"rXnmgHHmJOfLuQntFGGvPOLaUN8=\");\n_c = TextForm;\nexport default TextForm;\nTextForm.propTypes = {\n  heading: PropTypes.string.isRequired\n};\nvar _c;\n$RefreshReg$(_c, \"TextForm\");","map":{"version":3,"names":["React","useState","PropTypes","jsxDEV","_jsxDEV","Fragment","_Fragment","TextForm","props","_s","handleUpClick","console","log","text","newText","toUpperCase","setText","setButtonName","handleOnChange","event","target","value","buttonName","children","className","heading","fileName","_jsxFileName","lineNumber","columnNumber","onChange","id","rows","onClick","_c","propTypes","string","isRequired","$RefreshReg$"],"sources":["D:/React/todo/src/components/TextForm.js"],"sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nfunction TextForm(props) {\r\n\r\n    const handleUpClick = () => {\r\n        console.log(\"button is clicked\" + text)\r\n        let newText = text.toUpperCase()\r\n        setText(newText)\r\n        setButtonName('LowerCase')\r\n    }\r\n\r\n    const handleOnChange = (event) => {\r\n        setText(event.target.value)\r\n    }\r\n\r\n    const [text, setText] = useState('Enter Text Here...')\r\n\r\n    const [buttonName, setButtonName] = useState('Upper')\r\n\r\n  return (\r\n    <>\r\n    <div className=\"container\">\r\n        <h4>{props.heading}</h4>\r\n    <div className=\"mb-3 \">\r\n    <textarea className=\"form-control\" value={text} onChange={handleOnChange}  id=\"myBox\" rows=\"8\"></textarea>\r\n    </div>\r\n    <button className='btn btn-primary' onClick={handleUpClick}>Convert to {buttonName}</button>\r\n    </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default TextForm\r\n\r\nTextForm.propTypes = {\r\n    heading: PropTypes.string.isRequired\r\n}"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,SAAS,MAAM,YAAY;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAElC,SAASC,QAAQA,CAACC,KAAK,EAAE;EAAAC,EAAA;EAErB,MAAMC,aAAa,GAAGA,CAAA,KAAM;IACxBC,OAAO,CAACC,GAAG,CAAC,mBAAmB,GAAGC,IAAI,CAAC;IACvC,IAAIC,OAAO,GAAGD,IAAI,CAACE,WAAW,CAAC,CAAC;IAChCC,OAAO,CAACF,OAAO,CAAC;IAChBG,aAAa,CAAC,WAAW,CAAC;EAC9B,CAAC;EAED,MAAMC,cAAc,GAAIC,KAAK,IAAK;IAC9BH,OAAO,CAACG,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EAC/B,CAAC;EAED,MAAM,CAACR,IAAI,EAAEG,OAAO,CAAC,GAAGf,QAAQ,CAAC,oBAAoB,CAAC;EAEtD,MAAM,CAACqB,UAAU,EAAEL,aAAa,CAAC,GAAGhB,QAAQ,CAAC,OAAO,CAAC;EAEvD,oBACEG,OAAA,CAAAE,SAAA;IAAAiB,QAAA,eACAnB,OAAA;MAAKoB,SAAS,EAAC,WAAW;MAAAD,QAAA,gBACtBnB,OAAA;QAAAmB,QAAA,EAAKf,KAAK,CAACiB;MAAO;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAC5BzB,OAAA;QAAKoB,SAAS,EAAC,OAAO;QAAAD,QAAA,eACtBnB,OAAA;UAAUoB,SAAS,EAAC,cAAc;UAACH,KAAK,EAAER,IAAK;UAACiB,QAAQ,EAAEZ,cAAe;UAAEa,EAAE,EAAC,OAAO;UAACC,IAAI,EAAC;QAAG;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAW;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACrG,CAAC,eACNzB,OAAA;QAAQoB,SAAS,EAAC,iBAAiB;QAACS,OAAO,EAAEvB,aAAc;QAAAa,QAAA,GAAC,aAAW,EAACD,UAAU;MAAA;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAS,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvF;EAAC,gBACJ,CAAC;AAEP;AAACpB,EAAA,CA5BQF,QAAQ;AAAA2B,EAAA,GAAR3B,QAAQ;AA8BjB,eAAeA,QAAQ;AAEvBA,QAAQ,CAAC4B,SAAS,GAAG;EACjBV,OAAO,EAAEvB,SAAS,CAACkC,MAAM,CAACC;AAC9B,CAAC;AAAA,IAAAH,EAAA;AAAAI,YAAA,CAAAJ,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}